var documenterSearchIndex = {"docs":
[{"location":"about/license/","page":"License","title":"License","text":"The ImageQuilting.jl package is licensed under the MIT License:","category":"page"},{"location":"about/license/","page":"License","title":"License","text":"MIT License\n\nCopyright (c) 2015 Júlio Hoffimann <julio.hoffimann@gmail.com> and contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.","category":"page"},{"location":"voxel-reuse/#Helper-function","page":"Voxel reuse","title":"Helper function","text":"","category":"section"},{"location":"voxel-reuse/","page":"Voxel reuse","title":"Voxel reuse","text":"A helper function is provided for the fast approximation of the mean voxel reuse:","category":"page"},{"location":"voxel-reuse/","page":"Voxel reuse","title":"Voxel reuse","text":"voxelreuse","category":"page"},{"location":"voxel-reuse/#ImageQuilting.voxelreuse","page":"Voxel reuse","title":"ImageQuilting.voxelreuse","text":"voxelreuse(trainimg::AbstractArray{T,N}, tilesize::Dims{N};\n           overlap::NTuple{N,Float64}=ntuple(i->1/6,N),\n           nreal::Integer=10, kwargs...)\n\nReturns the mean voxel reuse in [0,1] and its standard deviation.\n\nNotes\n\nThe approximation gets better as nreal is made larger.\nKeyword arguments kwargs are passed to iqsim directly.\n\n\n\n\n\n","category":"function"},{"location":"voxel-reuse/#Plot-recipe","page":"Voxel reuse","title":"Plot recipe","text":"","category":"section"},{"location":"voxel-reuse/","page":"Voxel reuse","title":"Voxel reuse","text":"A plot recipe is provided for tile design in image quilting:","category":"page"},{"location":"voxel-reuse/","page":"Voxel reuse","title":"Voxel reuse","text":"voxelreuseplot","category":"page"},{"location":"voxel-reuse/#ImageQuilting.voxelreuseplot","page":"Voxel reuse","title":"ImageQuilting.voxelreuseplot","text":"voxelreuseplot(trainimg; [options])\n\nMean voxel reuse plot of trainimg.\n\nAvailable options:\n\ntmin    - minimum tile size (default to 7)\ntmax    - maximum tile size (default to minimum(size(trainimg)))\noverlap - the percentage of overlap (default to 1/6 of tile size)\nnreal   - number of realizations (default to 10)\nrng     - random number generator (default to Random.default_rng())\n\n\n\n\n\n","category":"function"},{"location":"voxel-reuse/","page":"Voxel reuse","title":"Voxel reuse","text":"In order to plot the voxel reuse of a training image, install any of the Makie.jl backends.","category":"page"},{"location":"voxel-reuse/","page":"Voxel reuse","title":"Voxel reuse","text":"] add CairoMakie","category":"page"},{"location":"voxel-reuse/","page":"Voxel reuse","title":"Voxel reuse","text":"The example below uses training images from the GeoStatsImages.jl package:","category":"page"},{"location":"voxel-reuse/","page":"Voxel reuse","title":"Voxel reuse","text":"using ImageQuilting\nusing GeoStatsImages\nusing CairoMakie\n\nTI₁ = geostatsimage(\"Strebelle\")\nTI₂ = geostatsimage(\"StoneWall\")\n\ntimg₁ = asarray(TI₁, :facies)\ntimg₂ = asarray(TI₂, :Z)\n\nvoxelreuseplot(timg₁)\nvoxelreuseplot!(timg₂)","category":"page"},{"location":"voxel-reuse/","page":"Voxel reuse","title":"Voxel reuse","text":"(Image: Voxel reuse plot)","category":"page"},{"location":"about/author/","page":"Author","title":"Author","text":"Júlio Hoffimann","category":"page"},{"location":"about/author/","page":"Author","title":"Author","text":"You can find more about my research on my website.","category":"page"},{"location":"about/author/","page":"Author","title":"Author","text":"Below are some ways that we can connect:","category":"page"},{"location":"about/author/","page":"Author","title":"Author","text":"ResearchGate\nLinkedIn\nGitHub","category":"page"},{"location":"about/citation/","page":"Citation","title":"Citation","text":"If you find ImageQuilting.jl useful in your work, please consider citing our paper:","category":"page"},{"location":"about/citation/","page":"Citation","title":"Citation","text":"@ARTICLE{Hoffimann2017,\n  title={Stochastic Simulation by Image Quilting of Process-based Geological Models},\n  author={Hoffimann, J{\\'u}lio and Scheidt, C{\\'e}line and Barfod, Adrian and Caers, Jef},\n  journal={Computers \\& Geosciences},\n  publisher={Elsevier BV},\n  volume={106},\n  pages={18-32},\n  ISSN={0098-3004},\n  DOI={10.1016/j.cageo.2017.05.012},\n  url={http://dx.doi.org/10.1016/j.cageo.2017.05.012},\n  year={2017},\n  month={May}\n}","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for fast 3D image quilting simulation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status) (Image: Coverage Status) (Image: Stable Documentation) (Image: Latest Documentation)","category":"page"},{"location":"","page":"Home","title":"Home","text":"This package implements an extension to the famous Efros-Freeman algorithm for texture synthesis and transfer in computer vision. Unlike the original algorithm developed for 2D images, our method can also handle 3D masked grids and pre-existing point-data very efficiently (the fastest in the literature). For more details, please refer to our paper in Citation.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: 3D Quilting Animation)","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Masked grids\nHard data conditioning\nSoft data conditioning\nFast computation with GPUs","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Get the latest stable release with Julia's package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add ImageQuilting","category":"page"},{"location":"#Talks","page":"Home","title":"Talks","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Below is a list of talks related to this project. For more material, please subscribe to the YouTube channel.","category":"page"},{"location":"","page":"Home","title":"Home","text":"<p align=\"center\">\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/YJs7jl_Y9yM\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</p>\n<p align=\"center\">\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Y5KhQCapuPw\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</p>","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package is part of the GeoStats.jl framework. See its documentation for examples of practical use.","category":"page"},{"location":"#Low-level-API","page":"Home","title":"Low-level API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you are interested in using the package without GeoStats.jl, please use the following function:","category":"page"},{"location":"","page":"Home","title":"Home","text":"iqsim","category":"page"},{"location":"#ImageQuilting.iqsim","page":"Home","title":"ImageQuilting.iqsim","text":"iqsim(trainimg::AbstractArray{T,N}, tilesize::Dims{N},\n      simsize::Dims{N}=size(trainimg);\n      overlap::NTuple{N,<:Real}=ntuple(i->1/6,N),\n      soft::AbstractVector=[], hard::Dict=Dict(), tol::Real=.1,\n      path::Symbol=:raster, nreal::Integer=1,\n      threads::Integer=cpucores(), debug::Bool=false,\n      progress::Bool=true, rng::AbstractRNG=Random.default_rng())\n\nPerforms image quilting simulation as described in Hoffimann et al. 2017.\n\nParameters\n\nRequired\n\ntrainimg is any Julia array\ntilesize is the tile size\n\nOptional\n\nsimsize is the size of the simulation grid (default to training image size)\noverlap is the percentage of overlap (default to 1/6 of tile size)\nsoft is a vector of (data,dataTI) pairs (default to none)\nhard is a dictionary mapping coordinates to data values (default to none)\ntol is the initial relaxation tolerance in (0,1] (default to .1)\npath is the simulation path (:raster, :dilation or :random)\nnreal is the number of realizations (default to 1)\nthreads is the number of threads for the FFT (default to all CPU cores)\ndebug informs whether to export or not the boundary cuts and voxel reuse\nprogress informs whether to show or not estimated time duration\nrng is the random number generator (default to Random.default_rng())\n\nThe main output reals consists of a list of realizations that can be indexed with reals[1], reals[2], ..., reals[nreal]. If debug=true, additional output is generated:\n\nreals, cuts, voxs = iqsim(..., debug=true)\n\ncuts[i] is the boundary cut for reals[i] and voxs[i] is the associated voxel reuse.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"The major difference compared to the high-level API is that the iqsim function has no notion of coordinate system, and you will have to pre/post-process the data manually to match it with the cells in the simulation grid.","category":"page"},{"location":"","page":"Home","title":"Home","text":"GeoStats.jl takes the coordinate system into account and also enables parallel simulation on clusters of computers with distributed memory.","category":"page"}]
}
